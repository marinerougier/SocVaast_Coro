# To reset the workspace
rm(list=ls())
# package import ----------------------------------------------------------
library(tidyverse)
library(jsonlite)
library(glue)
library(data.table)
library(magrittr)
# database import ---------------------------------------------------------
database <-
fireData::download("https://vaastcoro.firebaseio.com", "/")
# vaast dataset -----------------------------------------------------------
dataset_vaast_trial <-
database %>%
pluck("vaast_trial_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
vaast_first_block = .x$vaast_first_block,
temp_data = .x$vaast_trial_data)) %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000 ),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest()
dataset_vaast_trial
browser_event_corona_en <-
database %>%
pluck("browser_event_VAAST_FrMg") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
temp_data = .x$event_data,
completion = .x$completion),
.id = "id") %>%
group_by(id) %>%
arrange(desc(epoch)) %>%
filter(row_number() == 1) %>%
ungroup() %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest()
# browser event dataset ---------------------------------------------------
dataset_vaast_browser_event <-
database %>%
pluck("browser_event_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
temp_data = .x$event_data,
completion = .x$completion),
.id = "id") %>%
group_by(id) %>%
arrange(desc(epoch)) %>%
filter(row_number() == 1) %>%
ungroup() %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest()
dataset_vaast_connection <-
database %>%
pluck("VAAST_corona_en") %>%
map_dfr(~data_frame(data = list(pluck(.x))),
.id = "id")  %>%
unnest()   %>%
mutate(data = map(data, ~data_frame(epoch  = .x$timestamp,
status = .x$status) %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000))
)) %>%
unnest()
dataset_extra <-
database %>%
pluck("extra_info_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
vaast_first_block = .x$vaast_first_block,
temp_data = .x$extra_data),
.id = "id") %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest()
View(dataset_extra)
dataset_extra <-
database %>%
pluck("extra_info_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
vaast_first_block = .x$vaast_first_block,
temp_data = .x$extra_data),
.id = "id") %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest() %>%
subset(jspsych_id != "999")%>%
drop_na(responses) %>%
mutate(temp_data = map(responses, ~ fromJSON(.x))) %>%
group_by(jspsych_id) %>%
mutate(Country = extra_information_1,
zip_code = extra_information_2,
age = extra_information_3,
nb_family = extra_information_6,
nb_friends = extra_information_7,
sex = temp_data[internal_node_id %like%  "0.0-33.0"],
occupation = temp_data[internal_node_id %like%  "0.0-34.0"],
remarks = temp_data[internal_node_id %like%  "0.0-37.0"],
email = temp_data[internal_node_id %like%  "0.0-38.0"]) %>%
select(jspsych_id, Country, zip_code, age, nb_family, nb_friends, sex, occupation, remarks, email) %>%
rowwise() %>%
mutate(Country = pluck(Country, 1),
zip_code = pluck(zip_code, 1),
age = pluck(age, 1),
nb_family = pluck(nb_family, 1),
nb_friends = pluck(nb_friends, 1),
nb_family = pluck(nb_family, 1),
sex = pluck(sex, 1),
occupation = pluck(occupation, 1),
remarks = pluck(remarks, 1),
email = pluck(email, 1)) %>%
ungroup() %>%
distinct()
dataset_extra
dataset_questions <-
database %>%
pluck("questions_info_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
vaast_first_block = .x$vaast_first_block,
temp_data = .x$extra_data),
.id = "id") %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest()
dataset_questions <-
database %>%
pluck("questions_info_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
vaast_first_block = .x$vaast_first_block,
temp_data = .x$questions_data),
.id = "id") %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest()
dataset_questions
View(dataset_questions)
save(dataset_vaast_trial, file = "data_VAAST/data_VAAST.RData")
save(dataset_vaast_trial, file = "data_VAAST/data_VAAST.RData")
save(dataset_vaast_browser_event, file = "data_VAAST/data_vaast_browser.RData")
save(dataset_vaast_connection, file = "data_VAAST/data_vaast_connection.RData")
save(dataset_extra, file = "data_VAAST/data_extra.RData")
dataset_questions <-
database %>%
pluck("questions_info_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
vaast_first_block = .x$vaast_first_block,
temp_data = .x$questions_data),
.id = "id") %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest()
View(dataset_questions)
# To reset the workspace
rm(list=ls())
# package import ----------------------------------------------------------
library(tidyverse)
library(jsonlite)
library(glue)
library(data.table)
library(magrittr)
# database import ---------------------------------------------------------
database <-
fireData::download("https://vaastcoro.firebaseio.com", "/")
dataset_questions <-
database %>%
pluck("questions_info_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
vaast_first_block = .x$vaast_first_block,
temp_data = .x$questions_data),
.id = "id") %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest()
View(dataset_questions)
# To reset the workspace
rm(list=ls())
# package import ----------------------------------------------------------
library(tidyverse)
library(jsonlite)
library(glue)
library(data.table)
library(magrittr)
# database import ---------------------------------------------------------
database <-
fireData::download("https://vaastcoro.firebaseio.com", "/")
dataset_questions <-
database %>%
pluck("questions_info_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
vaast_first_block = .x$vaast_first_block,
temp_data = .x$questions_data),
.id = "id") %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest()
View(dataset_questions)
dataset_questions <-
database %>%
pluck("questions_info_corona_en") %>%
map_dfr(~data_frame(epoch = .x$timestamp,
jspsych_id = .x$jspsych_id,
vaast_first_block = .x$vaast_first_block,
temp_data = .x$questions_data),
.id = "id") %>%
mutate(timestamp = lubridate::as_datetime(epoch / 1000),
temp_data = map(temp_data, ~ fromJSON(.x))) %>%
unnest() %>%
subset(jspsych_id != "999")%>%
drop_na(responses) %>%
mutate(temp_data = map(responses, ~ fromJSON(.x))) %>%
group_by(jspsych_id) %>%
mutate(item_1 = item_1,
item_2 = item_2,
item_3 = item_3,
item_4 = item_4,
item_5 = item_5,
item_6 = item_6,
item_7 = item_7,
item_8 = item_8,
item_9 = item_9,
item_10 = item_10,
item_11 = item_11,
item_12 = item_12,
item_13 = item_13,
item_14 = item_14,
item_15 = item_15,
item_16 = item_16,
item_17 = item_17) %>%
select(jspsych_id, item_1, item_2, item_3, item_4, item_5, item_6, item_7, item_8, item_9, item_10, item_11, item_12, item_13, item_14, item_15, item_16, item_17) %>%
rowwise() %>%
mutate(item_1 = pluck(item_1, 1),
item_2 = pluck(item_2, 1),
item_3 = pluck(item_2, 1),
item_4 = pluck(item_4, 1),
item_5 = pluck(item_5, 1),
item_6 = pluck(item_6, 1),
item_7 = pluck(item_7, 1),
item_8 = pluck(item_8, 1),
item_9 = pluck(item_9, 1),
item_10 = pluck(item_10, 1),
item_11 = pluck(item_11, 1),
item_12 = pluck(item_12, 1),
item_13 = pluck(item_13, 1),
item_14 = pluck(item_14, 1),
item_15 = pluck(item_15, 1),
item_16 = pluck(item_16, 1),
item_17 = pluck(item_17, 1)) %>%
ungroup() %>%
distinct()
dataset_questions
### Workspace -------------------------------------------------------------------
# To reset the workspace
rm(list=ls())
### Loading packages ------------------------------------------------------------
library(plyr)
library(dplyr)
library(gdata)
library(reshape)
library(car)
#library(tidyverse)
library(tidyr)
library(magrittr)
library(data.table)
library(ggplot2) # for the graphics
library(readr)
library(stringr)
library(psych)
library(GPArotation)
library(tidyverse)
# for the confidence intervals
ci.fun <- function (x) {
moe<-qt(0.975, length(x)-1) * sd(x,na.rm=TRUE) / sqrt(length(x))
LI <- mean(x,na.rm=TRUE) - moe
HI <- mean(x,na.rm=TRUE) + moe
Mean <- mean(x,na.rm=TRUE)
CI<-cbind(LI,Mean,HI)
colnames(CI)<-c("2.5%","Mean","97.5%")
row.names(CI)<-deparse(substitute(x))
CI
}
# Left Outter Join
LOT <- function(X = NULL, Y = NULL, onCol = NULL) {
giveExemple <- is.null(X) & is.null(Y) & is.null(onCol)
if (giveExemple) {
cat("\nExemple:")
cat("\n>X\n")
X <- data.table(id = 1:5, L = letters[1:5]) %T>% print
cat("\n>Y\n")
Y <- data.table(id = 3:5, L = c(NA, "g", "h"), N = c(10, NA, 12)) %T>% print
onCol <- "id"
cat('\nLOT(X, Y, "id")\n')
}
n <- names(Y)
X[Y, (n) := mget(paste0("i.", n)), on = onCol]
if (giveExemple) {cat(">X\n"); print(X)}
}
# Ensure that relative paths start from the same directory as this script
rstudioapi::getActiveDocumentContext()$path %>% dirname %>% setwd
#-----------------------------------------------------------
#                     VAAST
#-----------------------------------------------------------
### Data files import and dataset formating -----------------------------------------------------------
load("Data_VAAST/data_VAAST.RData")
DF <- data.table(dataset_vaast_trial)
head(DF)
View(DF)
DF$jspsych_id  <- factor(DF$jspsych_id)
DF$Stimuli  <- factor(DF$stimulus)
DF$Movement <- factor(DF$movement)
DF$Group  <- factor(DF$group)
# We keep only VAAST trials (sometimes instructions as stimuli)
DF <- subset (DF, trial_type == "vaast-image")
# we remove the other positions having no meaning
DF <- subset (DF, key_press != "NA")
xtabs(~Stimuli + jspsych_id, DF)
# Computing error rate by pp
DF1 <- subset (DF, correct == FALSE)
Nb_trials_error <- data.frame((table(DF1$jspsych_id))/400)
Nb_trials_error <- rename.vars (Nb_trials_error, c("Var1","Freq"), c("jspsych_id","Nb_erros"))
arrange(Nb_trials_error,Nb_erros)
